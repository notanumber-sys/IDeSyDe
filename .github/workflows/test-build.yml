---
name: "Building executables"

on:
  push:
    branches:
      - "master"
      - "develop"
  pull_request:
    types: [opened, reopened]

concurrency:
  group: Building executables @ ${{ github.ref }}
  cancel-in-progress: true

jobs:
  test-java-build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        java:
          - "openjdk@1.11.0"
          - "openjdk@1.15.0"
          - "openjdk@1.17.0"
          - "zulu@1.11.0"
          - "zulu@1.15.0"
          - "zulu@1.17.0"
          # - "amazon-corretto@1.17.0-0.35.1"
          - "amazon-corretto@1.11.0-11.9.1"
          - "graalvm-ce-java11@21.1.0"
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    # - uses: ./.github/actions/millw@v1
    #   with:
    #     java-version: ${{ matrix.java }}
    #     command: cli.assembly
    - name: Set up JDK ${{ matrix.java }}
      uses: olafurpg/setup-scala@v10
      with:
        java-version: ${{ matrix.java }}
        # server-id: io.github.forsyde # Value of the distributionManagement/repository/id field of the pom.xml
        # settings-path: ${{ github.workspace }} # location for the settings.xml file
    - name: Build assembly with sbt
      run: |
        cd ${{ github.workspace }}
        sbt assembly
    - name: Build packages with sbt
      if: ${{ contains(matrix.java, '15') || contains(matrix.java, '17') }}
      run: |
        cd ${{ github.workspace }}
        sbt cli/stage
    # - name: Build with mill (Windows)
    #   if: ${{ matrix.os == 'windows-latest' }}
    #   run: |
    #     cd ${{ github.workspace }}
    #     .\millw.bat cli.assembly
    # - name: Build with Gradle (Windows)
    #   if: ${{ matrix.os == 'windows-latest' }}
    #   run: |
    #     cd ${{ github.workspace }}\java
    #     .\gradlew.bat build
  # publish-linux-pyz:
  #   strategy:
  #     matrix:
  #       python: [3.7, 3.8, 3.9]
  #       poetry: [1.1.5]
  #       rust: [1.49.0]
  #       pyoxidizer: [0.11.0]
  #   runs-on: ubuntu-18.04
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Set up Python ${{ matrix.python }}
  #     uses: actions/setup-python@v2
  #     with:
  #       python-version: ${{ matrix.python }}
  #   - name: Set up pip properly
  #     run: python -m pip install --upgrade pip
  #   - uses: abatilo/actions-poetry@v2.1.0
  #     with:
  #       poetry-version: ${{ matrix.poetry }}
  #   - name: Make shiv from poetry file
  #     run: |
  #       cd ${{ github.workspace }}
  #       poetry update
  #       poetry install
  #       mkdir -p dist
  #       poetry run shiv --site-packages=$(find $(poetry env info -p) -name "site-packages") --upgrade -o dist/idesyde.pyz -c idesyde idesyde
  # publish-linux-bin:
  #   env:
  #     PYTHON_VERSION: 3.8
  #     POETRY_VERSION: 1.1.5
  #     RUST_VERSION: 1.49.0
  #     PYOXIDIZER_VERSION: 0.11.0
  #   runs-on: ubuntu-18.04
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Set up Python ${{ env.PYTHON_VERSION }}
  #     uses: actions/setup-python@v2
  #     with:
  #       python-version: ${{ env.PYTHON_VERSION }}
  #   - name: Set up pip properly
  #     run: python -m pip install --upgrade pip
  #   - uses: abatilo/actions-poetry@v2.1.0
  #     with:
  #       poetry-version: ${{ env.POETRY_VERSION }}
  #   - name: Setup Rust
  #     uses: ATiltedTree/setup-rust@v1.0.4
  #     with:
  #       rust-version: ${{ env.RUST_VERSION }}
  #   - name: Install PyOxidizer
  #     run: cargo install --version ${{ env.PYOXIDIZER_VERSION }} pyoxidizer
  #   - name: Run PyOxidizer
  #     run: |
  #       cd ${{ github.workspace }}
  #       pyoxidizer build --release
  # publish-windows-pyz:
  #   strategy:
  #     matrix:
  #       python: [3.7, 3.8, 3.9]
  #       poetry: [1.1.5]
  #       rust: [1.49.0]
  #       pyoxidizer: [0.11.0]
  #   runs-on: windows-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Set up Python ${{ matrix.python }}
  #     uses: actions/setup-python@v2
  #     with:
  #       python-version: ${{ matrix.python }}
  #   - name: Set up pip properly
  #     run: python -m pip install --upgrade pip
  #   - uses: abatilo/actions-poetry@v2.1.0
  #     with:
  #       poetry-version: ${{ matrix.poetry }}
  #   - name: Make shiv from poetry file
  #     run: |
  #       cd ${{ github.workspace }}
  #       poetry update
  #       poetry install
  #       mkdir -p dist
  #       poetry run shiv -o dist\idesyde.pyz -c idesyde idesyde
  # publish-windows-bin:
  #   env:
  #     PYTHON_VERSION: 3.9
  #     POETRY_VERSION: 1.1.5
  #     RUST_VERSION: 1.49.0
  #     PYOXIDIZER_VERSION: 0.11.0
  #   runs-on: windows-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Set up Python ${{ env.PYTHON_VERSION }}
  #     uses: actions/setup-python@v2
  #     with:
  #       python-version: ${{ env.PYTHON_VERSION }}
  #   - name: Set up pip properly
  #     run: python -m pip install --upgrade pip
  #   - uses: abatilo/actions-poetry@v2.1.0
  #     with:
  #       poetry-version: ${{ env.POETRY_VERSION }}
  #   - name: Setup Rust
  #     uses: ATiltedTree/setup-rust@v1.0.4
  #     with:
  #       rust-version: ${{ env.RUST_VERSION }}
  #   - name: Install PyOxidizer
  #     run: cargo install --version ${{ env.PYOXIDIZER_VERSION }} pyoxidizer
  #   - name: Run PyOxidizer
  #     run: |
  #       cd ${{ github.workspace }}
  #       pyoxidizer build --release
  # publish-apple-pyz:
  #   strategy:
  #     matrix:
  #       python: [3.7, 3.8, 3.9]
  #       poetry: [1.1.5]
  #       rust: [1.49.0]
  #       pyoxidizer: [0.11.0]
  #   runs-on: macos-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Set up Python ${{ matrix.python }}
  #     uses: actions/setup-python@v2
  #     with:
  #       python-version: ${{ matrix.python }}
  #   - name: Set up pip properly
  #     run: python -m pip install --upgrade pip
  #   - uses: abatilo/actions-poetry@v2.1.0
  #     with:
  #       poetry-version: ${{ matrix.poetry }}
  #   - name: Regen Setup.py from poetry file
  #     run: |
  #       cd ${{ github.workspace }}
  #       poetry update
  #       poetry install
  #       mkdir -p dist
  #       poetry run shiv --site-packages=$(find $(poetry env info -p) -name "site-packages") --upgrade -o dist/idesyde.pyz -c idesyde idesyde
  # publish-apple-bin:
  #   env:
  #     PYTHON_VERSION: 3.9
  #     POETRY_VERSION: 1.1.5
  #     RUST_VERSION: 1.49.0
  #     PYOXIDIZER_VERSION: 0.11.0
  #   runs-on: macos-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Set up Python ${{ env.PYTHON_VERSION }}
  #     uses: actions/setup-python@v2
  #     with:
  #       python-version: ${{ env.PYTHON_VERSION }}
  #   - name: Set up pip properly
  #     run: python -m pip install --upgrade pip
  #   - uses: abatilo/actions-poetry@v2.1.0
  #     with:
  #       poetry-version: ${{ env.POETRY_VERSION }}
  #   - name: Setup Rust
  #     uses: ATiltedTree/setup-rust@v1.0.4
  #     with:
  #       rust-version: ${{ env.RUST_VERSION }}
  #   - name: Install PyOxidizer
  #     run: cargo install --version ${{ env.PYOXIDIZER_VERSION }} pyoxidizer
  #   - name: Regen Setup.py from poetry file
  #     run: |
  #       cd ${{ github.workspace }}
  #       poetry update
  #       poetry export -o requirements.txt
  #   - name: Run PyOxidizer
  #     run: |
  #       cd ${{ github.workspace }}
  #       pyoxidizer build --release
